{"version":3,"sources":["Ball.js","Lottery.js","App.js","reportWebVitals.js","index.js"],"names":["Ball","className","this","props","num","Component","Lottery","state","nums","Array","from","length","maxBalls","handleClick","bind","setState","curState","map","n","Math","floor","random","generate","title","onClick","defaultProps","maxNum","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RASeA,E,4JALf,WACI,OAAO,qBAAKC,UAAU,OAAf,SAAuBC,KAAKC,MAAMC,U,GAF1BC,aCCbC,G,wDAOF,WAAYH,GAAO,IAAD,8BACd,cAAMA,IACDI,MAAQ,CAAEC,KAAMC,MAAMC,KAAK,CAAEC,OAAQ,EAAKR,MAAMS,YACrD,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAHL,E,4CAMlB,WAAY,IAAD,OACPZ,KAAKa,UAAS,SAAAC,GAAQ,MAAK,CACvBR,KAAMQ,EAASR,KAAKS,KAAI,SAAAC,GAAC,OAAIC,KAAKC,MAAMD,KAAKE,SAAW,EAAKlB,MAAMS,UAAY,W,yBAKvF,WACQV,KAAKoB,a,oBAGb,WACI,OACA,0BAASrB,UAAU,UAAnB,UACA,6BAAKC,KAAKC,MAAMoB,QACR,8BAAMrB,KAAKK,MAAMC,KAAKS,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMd,IAAKc,SAClD,wBAAQM,QAAStB,KAAKW,YAAtB,6B,GA7BcR,cAAhBC,EACKmB,aAAe,CAClBF,MAAO,QACPX,SAAU,EACVc,OAAQ,IA8BDpB,QC1BAqB,MATf,WACE,OACE,sBAAK1B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAASsB,MAAM,aAAaX,SAAU,EAAGc,OAAQ,SCKxCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f4d9601b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Ball.css'\r\n\r\nclass Ball extends Component{\r\nrender(){\r\n    return <div className=\"Ball\">{this.props.num}</div>\r\n}\r\n}\r\n\r\nexport default Ball","import React, { Component } from 'react'\r\nimport Ball from './Ball'\r\nimport './Lottery.css'\r\n\r\nclass Lottery extends Component{\r\n    static defaultProps = {\r\n        title: 'Lotto',\r\n        maxBalls: 6,\r\n        maxNum: 40\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = { nums: Array.from({ length: this.props.maxBalls }) }\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    generate() {\r\n        this.setState(curState => ({\r\n            nums: curState.nums.map(n => Math.floor(Math.random() * this.props.maxBalls) + 1)\r\n        }))\r\n    }\r\n\r\n\r\n    handleClick(){\r\n            this.generate()\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n        <section className=\"Lottery\">\r\n        <h1>{this.props.title}</h1>\r\n                <div>{this.state.nums.map(n => <Ball num={n}/>)}</div>\r\n        <button onClick={this.handleClick}>Generate</button>\r\n        </section>)\r\n    }\r\n}\r\n\r\nexport default Lottery","import './App.css';\nimport Lottery from './Lottery';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Lottery />\n      <Lottery title=\"Mini Daily\" maxBalls={4} maxNum={10} /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}